{"version":3,"sources":["Snow.js","App.js","index.js"],"names":["Snow","snowElements","i","push","className","App","path","process","useState","pockets","setPockets","opened","setOpened","useEffect","stored","window","localStorage","getItem","JSON","parse","randomized","sort","Math","random","splice","setItem","stringify","src","alt","map","item","index","includes","Number","isSafeInteger","Date","getDate","onClick","day","now","open","render","StrictMode","document","getElementById"],"mappings":"0NAqBeA,EAnBF,WAMV,IAHA,IAAMC,EAAe,GAGZC,EAAI,EAAGA,EAAI,IAAKA,IACtBD,EAAaE,KAAK,qBAAaC,UAAU,QAAbF,IAI/B,OACG,qBAAKE,UAAU,iBAAf,SACIH,KC2DKI,EAvEH,WAGT,IAAMC,EAAOC,mBAHE,EAMeC,mBAAS,IANxB,mBAMRC,EANQ,KAMCC,EAND,OAOaF,mBAAS,IAPtB,mBAORG,EAPQ,KAOAC,EAPA,KAUfC,qBAAU,WAAO,IAAD,EACPC,EAAM,UAAGC,OAAOC,oBAAV,aAAG,EAAqBC,QAAQ,SAC5C,GAAIH,EACDJ,EAAWQ,KAAKC,MAAML,QAClB,CAAC,IAAD,EAEEM,EADU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAClDC,MAAK,iBAAM,GAAMC,KAAKC,YACjDH,EAAWI,OAAO,GAAI,EAAG,KACzB,UAAAT,OAAOC,oBAAP,SAAqBS,QAAQ,QAASP,KAAKQ,UAAUN,IACrDV,EAAWU,MAEd,IAGHP,qBAAU,WAAO,IAAD,EACPC,EAAM,UAAGC,OAAOC,oBAAV,aAAG,EAAqBC,QAAQ,UACxCH,GAAQF,EAAUM,KAAKC,MAAML,MACjC,IAGHD,qBAAU,WAAO,IAAD,EACb,UAAAE,OAAOC,oBAAP,SAAqBS,QAAQ,SAAUP,KAAKQ,UAAUf,MACtD,CAACA,IAWJ,OACG,sBAAKP,UAAU,YAAf,UACG,cAAC,EAAD,IACA,qBAAKA,UAAU,aAAauB,IAAG,UAAKrB,EAAL,0BAAmCsB,IAAI,yBACtE,qBAAKxB,UAAU,WAAf,SACIK,EAAQoB,KAAI,SAACC,EAAMC,GACjB,IAAI3B,EAAY,sCAAwC2B,EAMxD,MALa,MAATD,IAAc1B,GAAa,6BAC3BO,EAAOqB,SAASF,KAAO1B,GAAa,2BACpC6B,OAAOC,cAAcJ,KACtB1B,IAAa,IAAI+B,MAAOC,UAAYN,EAAO,4BAA8B,+BAGzE,qBAAiB1B,UAAWA,EAAWiC,QAAS,kBArBlD,SAAAC,GACV,IAAMC,EAAM,IAAIJ,KACZF,OAAOC,cAAcI,KAAS3B,EAAOqB,SAASM,IAAQC,EAAIH,WAAaE,GACxE1B,EAAU,GAAD,mBAAMD,GAAN,CAAc2B,KAkBwCE,CAAKV,IAA3D,SACKnB,EAAOqB,SAASF,GAGf,qBAAK1B,UAAU,mBAAmBuB,IAAG,UAAKrB,EAAL,sBAA+BsB,IAAG,2BAAsBE,KAF7F,qBAAK1B,UAAU,kBAAkBuB,IAAG,UAAKrB,EAAL,0BAA2BwB,EAA3B,QAAuCF,IAAG,iBAAYE,MAFtFC,Y,YCrD5BU,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.304fe69c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Snow = () => {\r\n\r\n   // Array of snow elements\r\n   const snowElements = [];\r\n\r\n   // Generate 200 snow elements\r\n   for (let i = 0; i < 200; i++) {\r\n      snowElements.push(<div key={i} className=\"snow\" />);\r\n   }\r\n\r\n   // Render snow\r\n   return (\r\n      <div className=\"snow-container\">\r\n         {snowElements}\r\n      </div>\r\n   );\r\n\r\n};\r\n\r\nexport default Snow;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Snow from './Snow';\r\n\r\nconst App = () => {\r\n\r\n   // Path to public\r\n   const path = process.env.PUBLIC_URL;\r\n\r\n   // State: list of all and opened pockets\r\n   const [pockets, setPockets] = useState([]);\r\n   const [opened, setOpened] = useState([]);\r\n\r\n   // Get randomized calendar items and save them in localStorage\r\n   useEffect(() => {\r\n      const stored = window.localStorage?.getItem('items');\r\n      if (stored) {\r\n         setPockets(JSON.parse(stored))\r\n      } else {\r\n         const numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24];\r\n         const randomized = numbers.sort(() => 0.5 - Math.random());\r\n         randomized.splice(12, 0, 'x');\r\n         window.localStorage?.setItem('items', JSON.stringify(randomized));\r\n         setPockets(randomized);\r\n      }\r\n   }, []);\r\n\r\n   // Retrieve saved data from localStorage\r\n   useEffect(() => {\r\n      const stored = window.localStorage?.getItem('opened');\r\n      if (stored) setOpened(JSON.parse(stored));\r\n   }, []);\r\n\r\n   // Update data in localStorage\r\n   useEffect(() => {\r\n      window.localStorage?.setItem('opened', JSON.stringify(opened));\r\n   }, [opened]);\r\n\r\n   // Open a pocket\r\n   const open = day => {\r\n      const now = new Date();\r\n      if (Number.isSafeInteger(day) && !opened.includes(day) && now.getDate() >= day) {\r\n         setOpened([ ...opened, day ]);\r\n      }\r\n   };\r\n\r\n   // Render calendar\r\n   return (\r\n      <div className=\"container\">\r\n         <Snow />\r\n         <img className=\"background\" src={`${path}/images/background.jpg`} alt=\"Photo by form PxHere\" />\r\n         <div className=\"calendar\">\r\n            {pockets.map((item, index) => {\r\n               let className = 'calendar__pocket calendar__pocket--' + index;\r\n               if (item === 'x') className += ' calendar__pocket--center';\r\n               if (opened.includes(item)) className += ' calendar__pocket--open';\r\n               if (Number.isSafeInteger(item)) {\r\n                  className += new Date().getDate() < item ? ' calendar__pocket--locked' : ' calendar__pocket--openable';\r\n               }\r\n               return (\r\n                  <div key={index} className={className} onClick={() => open(item)}>\r\n                     {!opened.includes(item) ? (\r\n                        <img className=\"calendar__image\" src={`${path}/images/Pocket_${item}.png`} alt={`Pocket ${item}`} />\r\n                     ) : (\r\n                        <img className=\"calendar__candle\" src={`${path}/images/candle.svg`} alt={`Candle in pocket ${item}`} />\r\n                     )}\r\n                  </div>\r\n               );\r\n            })}\r\n         </div>\r\n      </div>\r\n   );\r\n\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\nimport './styles.css';\r\nimport './snow.css';\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}